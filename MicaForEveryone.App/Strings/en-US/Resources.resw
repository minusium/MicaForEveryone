<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutCard.Header" xml:space="preserve">
    <value>About Mica For Everyone</value>
  </data>
  <data name="AboutLabel.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AppSettingsPage.Header" xml:space="preserve">
    <value>App settings</value>
  </data>
  <data name="AppTitleTextBlock.Text" xml:space="preserve">
    <value>Mica For Everyone</value>
  </data>
  <data name="BackdropTypeCard.Header" xml:space="preserve">
    <value>Backdrop type</value>
  </data>
  <data name="BlurBehindCard.Header" xml:space="preserve">
    <value>Enable blur behind</value>
  </data>
  <data name="CheckForUpdatesButton.Content" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="CheckForUpdatesCard.Header" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="CornerPreferenceCard.Header" xml:space="preserve">
    <value>Corner preference</value>
  </data>
  <data name="DangerousInfoBar.Title" xml:space="preserve">
    <value>Dangerous options ahead</value>
  </data>
  <data name="DangerousInfoBar.Message" xml:space="preserve">
    <value>The following settings may break apps. Save your work before enabling any of them!</value>
  </data>
  <data name="ExitFlyoutItem.Text" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExtendFrameCard.Header" xml:space="preserve">
    <value>Extend frame into client area</value>
  </data>
  <data name="RemoveCard.Header" xml:space="preserve">
    <value>Remove rule</value>
  </data>
  <data name="RemoveLabel.Text" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="SettingsFlyoutItem.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="StartupCard.Description" xml:space="preserve">
    <value>Starts Mica For Everyone on launch.</value>
  </data>
  <data name="StartupCard.Header" xml:space="preserve">
    <value>Launch on startup</value>
  </data>
  <data name="StartupLabel.Text" xml:space="preserve">
    <value>Startup</value>
  </data>
  <data name="StyleLabel.Text" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="TitleBarColorCard.Header" xml:space="preserve">
    <value>Title bar color</value>
  </data>
  <data name="UpdateAvailableInfoBar.Message" xml:space="preserve">
    <value>Please restart Mica For Everyone to apply the update.</value>
  </data>
  <data name="UpdateAvailableInfoBar.Title" xml:space="preserve">
    <value>An update is available</value>
  </data>
  <data name="UpdateErrorInfoBar.Message" xml:space="preserve">
    <value>We could not check for updates at this time. Please try again later.</value>
  </data>
  <data name="UpdateErrorInfoBar.Title" xml:space="preserve">
    <value>An error occured</value>
  </data>
  <data name="UpdateLabel.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpToDateInfoBar.Title" xml:space="preserve">
    <value>Mica For Everyone is up to date</value>
  </data>
  <data name="AdvancedLabel.Text" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="AddClassRuleDialog.Title" xml:space="preserve">
    <value>Add Class Rule</value>
  </data>
  <data name="AddClassRuleDialog.PrimaryButtonText" xml:space="preserve">
    <value>Add rule</value>
  </data>
  <data name="ClassTextBox.PlaceholderText" xml:space="preserve">
    <value>Enter a class name</value>
  </data>
  <data name="AddProcessRuleDialog.PrimaryButtonText" xml:space="preserve">
    <value>Add rule</value>
  </data>
  <data name="AddProcessRuleDialog.Title" xml:space="preserve">
    <value>Add Process Rule</value>
  </data>
  <data name="AddClassRuleDialog.CloseButtonText" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="AddProcessRuleDialog.CloseButtonText" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ProcessTextBox.PlaceholderText" xml:space="preserve">
    <value>Enter a process name</value>
  </data>
  <data name="GlobalRuleName" xml:space="preserve">
    <value>Global</value>
  </data>
  <data name="MicaBackdropName" xml:space="preserve">
    <value>Mica</value>
  </data>
  <data name="DefaultBackdropName" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="AcrylicBackdropName" xml:space="preserve">
    <value>Acrylic</value>
  </data>
  <data name="MicaAltBackdropName" xml:space="preserve">
    <value>Mica Alt</value>
  </data>
  <data name="NoneBackdropName" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="DefaultCornerPreference" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="SquareCornerPreference" xml:space="preserve">
    <value>Squared</value>
  </data>
  <data name="RoundedCornerPreference" xml:space="preserve">
    <value>Rounded</value>
  </data>
  <data name="RoundedSmallCornerPreference" xml:space="preserve">
    <value>Rounded (small)</value>
  </data>
  <data name="DefaultTitleBarColorMode" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="SystemTitleBarColorMode" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="LightTitleBarColorMode" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="DarkTitleBarColorMode" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="CustomTitleBarColorMode" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="AppSettingsNavigationViewItem.Content" xml:space="preserve">
    <value>App settings</value>
  </data>
  <data name="AddNewRuleNavigationViewItem.Content" xml:space="preserve">
    <value>Add new rule</value>
  </data>
  <data name="GlobalRuleNavigationViewItem.Content" xml:space="preserve">
    <value>Global</value>
  </data>
  <data name="AddProcessRuleMenuFlyoutItem.Text" xml:space="preserve">
    <value>Add process rule</value>
  </data>
  <data name="AddClassRuleMenuFlyoutItem.Text" xml:space="preserve">
    <value>Add class rule</value>
  </data>
  <data name="SettingsWindowTitle" xml:space="preserve">
    <value>Mica For Everyone Settings</value>
  </data>
</root>