<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		
		<!-- Built-in -->
		
		<OutputType>WinExe</OutputType>
		<TargetFramework>net9.0-windows10.0.22621.0</TargetFramework>
		<TargetPlatformMinVersion>10.0.19041.0</TargetPlatformMinVersion>
		<RootNamespace>MicaForEveryone.App</RootNamespace>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<Platforms>x86;x64;arm64</Platforms>
		<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
		<RuntimeIdentifier>win-$(Platform)</RuntimeIdentifier>
		<UseWinUI>true</UseWinUI>
		<EnableMsixTooling>true</EnableMsixTooling>
		<SelfContained>true</SelfContained>
		<LangVersion>preview</LangVersion>
		
		<!-- Enable AOT publishing on F5 -->
		
		<PublishAot>true</PublishAot>
		<IncludePublishItemsOutputGroup Condition="'$(Configuration)' == 'Release'">true</IncludePublishItemsOutputGroup>
		
		<!-- App-specific settings -->
		
		<ApplicationIcon>Assets\MicaForEveryone.ico</ApplicationIcon>
		<DefineConstants>DISABLE_XAML_GENERATED_MAIN;$(DefineConstants)</DefineConstants>
		<Nullable>enable</Nullable>

		<!-- C#/WinRT AOT compliance -->

		<WindowsSdkPackageVersion>10.0.22621.56</WindowsSdkPackageVersion>
		<CsWinRTRcwFactoryFallbackGeneratorForceOptOut>true</CsWinRTRcwFactoryFallbackGeneratorForceOptOut>
		<WarnAsError>CsWinRT1028;CsWinRT1029</WarnAsError>
		<CsWinRTIIDOptimizerOptOut>true</CsWinRTIIDOptimizerOptOut>
		
		<!-- Prevent WebView2Loader.dll from being copied to the runtime folder -->
		<WebView2UseWinRT>true</WebView2UseWinRT>
		
		<!-- Enable size inspection using sizoscope -->
		<IlcGenerateMstatFile>true</IlcGenerateMstatFile>
		<IlcGenerateDgmlFile>true</IlcGenerateDgmlFile>

		<!-- False positives -->
		<NoWarn>$(NoWarn);WMC1506</NoWarn>

		<Version>2.0.1.0</Version>
		<AssemblyVersion>2.0.1.0</AssemblyVersion>
		<FileVersion>2.0.1.0</FileVersion>
	</PropertyGroup>

	<ItemGroup>
		<LinkerArg Include="/INTEGRITYCHECK" Condition="$(RuntimeIdentifier.StartsWith('win')) And '$(TrustedSigningEnabled)' == 'true'" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Labs.Extensions.DependencyInjection" Version="0.1.241113-build.1784" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.Primitives" Version="8.2.250129-preview2" />
		<PackageReference Include="CommunityToolkit.WinUI.Controls.SettingsControls" Version="8.2.250129-preview2" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.1" />
		<PackageReference Include="Dongle.TrustedSigning" Version="1.0.60" />
		<PackageReference Include="Microsoft.Windows.CsWinRT" Version="2.2.0" />
		<PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.756" />
		<PackageReference Include="Microsoft.WindowsAppSDK" Version="1.6.250108002" />
		<Manifest Include="$(ApplicationManifest)" />
	</ItemGroup>

	<!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
    -->
	<ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<ProjectCapability Include="Msix" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\MicaForEveryone.CoreUI\MicaForEveryone.CoreUI.csproj" />
		<ProjectReference Include="..\MicaForEveryone.Models\MicaForEveryone.Models.csproj" />
	</ItemGroup>

	<!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
    -->
	<PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
	</PropertyGroup>

	<Target Name="RemoveWebView2" BeforeTargets="ResolveAssemblyReferences">
		<ItemGroup>
			<_WebView2Reference Include="@(Reference)" Condition="'%(Filename)' == 'Microsoft.Web.WebView2.Core'" />
			<Reference Remove="@(_WebView2Reference)" />
			<Reference Include="@(_WebView2Reference)" RemoveMetadata="Implementation">
				<Private>false</Private>
			</Reference>

			<ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" Condition="'%(Filename)' == 'Microsoft.Web.WebView2.Core'" />
		</ItemGroup>
	</Target>

	<Target Name="RemoveWebView2Loader" AfterTargets="ResolvePackageAssets">
		<ItemGroup>
			<_WebView2Loader Include="@(NativeCopyLocalItems)" Condition="'%(Filename)' == 'WebView2Loader'" />
			<NativeCopyLocalItems Remove="@(_WebView2Loader)" />
		</ItemGroup>
	</Target>

	<Target Name="SignAfterPublish" AfterTargets="__GetPublishItems" Condition="'$(TrustedSigningEnabled)' == 'true'">
		<Error Condition="'$(TrustedSigningMetadataPath)' == ''" Text="The TrustedSigningMetadataPath property must be specified to sign." />
		<ItemGroup>
			<_SignableFiles Include="@(_PublishItem)" Condition="'%(Extension)' == '.exe'" />
		</ItemGroup>
		<PropertyGroup>
			<TrustedSigningCommand>"$(SignAppxPackageExeFullPath)" sign /v /debug /fd SHA256 /tr "http://timestamp.acs.microsoft.com" /td SHA256 /dlib "$(TrustedSigningDlibFilePath)" /dmdf "$(TrustedSigningMetadataPath)" @(_SignableFiles->'"%(FullPath)"', ' ')</TrustedSigningCommand>
		</PropertyGroup>
		<Exec Command="$(TrustedSigningCommand)" />
	</Target>

	<Target Name="SignMsixFile" Condition="'$(TrustedSigningEnabled)' == 'true'" AfterTargets="_GenerateAppxPackageFile">
		<Error Condition="'$(TrustedSigningMetadataPath)' == ''" Text="The TrustedSigningMetadataPath property must be specified to sign." />
		<PropertyGroup>
			<TrustedSigningCommand>"$(SignAppxPackageExeFullPath)" sign /v /debug /fd SHA256 /tr "http://timestamp.acs.microsoft.com" /td SHA256 /dlib "D:\source\TrustedSigningNAOT\TrustedSigningNAOT\bin\Release\net9.0-windows10.0.22621\win-arm64\publish\TrustedSigningNAOT.dll" /dmdf "$(TrustedSigningMetadataPath)" @(FinalAppxPackageItem->'"%(FullPath)"', ' ')</TrustedSigningCommand>
		</PropertyGroup>
		<Exec Command="$(TrustedSigningCommand)" />
	</Target>

</Project>